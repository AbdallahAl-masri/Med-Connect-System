@model MCS.Models.DeptStaffModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body>
    <!-- Header -->
    <nav class="navbar bg">
        <div class="container-fluid">
            <a class="navbar-brand" href="@Url.Action("Index", "Admin")">
                <img src="~/images/logo2.png" alt="Hospital Logo" class="logo">
            </a>
            <h2 class="dr-name">Assign Employee</h2>
            <div class="d-flex">
                <span class="navbar-text">Logged in @ViewBag.UserName</span>
                <form asp-controller="Authentication" asp-action="StaffLogin" method="post" class="ms-3">
                    <button type="submit" class="btn btn-outline-dark">Logout</button>
                </form>
            </div>
        </div>
    </nav>
    <br>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <nav class="col-md-3 col-lg-2 d-md-block sidebar">
                <div class="position-sticky">
                    <ul class="nav flex-column">
                        <li class="nav-item"><a href="@Url.Action("Index", "Admin")" class="nav-link active"><h5><i class="bi bi-house-fill"></i> Home</h5></a></li>
                        <li class="nav-item"><a href="@Url.Action("AssignLoginInfo", "Admin")" class="nav-link"><h5><i class="bi bi-person-plus"></i> Assign Login Info</h5></a></li>
                        <li class="nav-item"><a href="@Url.Action("ManageEmployees", "Admin")" class="nav-link"><h5><i class="bi bi-people"></i> Manage Users</h5></a></li>
                    </ul>
                </div>
            </nav>

            <!-- Main Content -->

        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="box">
                    <h2 class="mb-4">Assign Login Info</h2>
                    @using (Html.BeginForm("CreateCredentials", "Admin", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <div class="mb-3">
                            @Html.LabelFor(model => model.FirstName, new { @class = "form-label" })
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.LastName, new { @class = "form-label" })
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Email, new { @class = "form-label" })
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.PhoneNumber, new { @class = "form-label" })
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.DepartmentId, new { @class = "form-label" })
                            @Html.EditorFor(model => model.DepartmentId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Role:</label>
                            <div>
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(model => model.Role, "Doctor", new { @class = "form-check-input", id = "Doctor", onchange = "toggleSpecialtyField()" })
                                    <label class="form-check-label" for="Doctor">Doctor</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(model => model.Role, "Staff", new { @class = "form-check-input", id = "Staff", onchange = "toggleSpecialtyField()" })
                                    <label class="form-check-label" for="Staff">Staff</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(model => model.Role, "Pharmacist", new { @class = "form-check-input", id = "Pharmacist", onchange = "toggleSpecialtyField()" })
                                    <label class="form-check-label" for="Pharmacist">Pharmacist</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(model => model.Role, "Lab Technician", new { @class = "form-check-input", id = "LabTechnician", onchange = "toggleSpecialtyField()" })
                                    <label class="form-check-label" for="LabTechnician">Lab Technician</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(model => model.Role, "Radiology Technician", new { @class = "form-check-input", id = "RadiologyTechnician", onchange = "toggleSpecialtyField()" })
                                    <label class="form-check-label" for="RadiologyTechnician">Radiology Technician</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(model => model.Role, "Admin", new { @class = "form-check-input", id = "Admin", onchange = "toggleSpecialtyField()" })
                                    <label class="form-check-label" for="Admin">Admin</label>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3" id="specialty-field" style="display: none;">
                            @Html.LabelFor(model => model.Speciality, new { @class = "form-label" })
                            @Html.EditorFor(model => model.Speciality, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Speciality, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Password, new { @class = "form-label" })
                            @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    }
            </div>
        </main>

    <!-- Footer and Bootstrap JS as before -->
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
            <script>
                function toggleSpecialtyField() {
                    var role = document.querySelector('input[name="Role"]:checked').value;
                    var specialtyField = document.getElementById('specialty-field');
                    if (role === 'Doctor') {
                        specialtyField.style.display = 'block';
                    } else {
                        specialtyField.style.display = 'none';
                    }
                }
                // Trigger on page load in case the default selected role is "Doctor"
                window.onload = function () {
                    toggleSpecialtyField();
                };
            </script>
</body>
</html>
